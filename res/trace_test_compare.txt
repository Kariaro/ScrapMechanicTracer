"sm": {
    "raycastResult": {
        [userdata] getBody( Raycastresult ) args:1,
        [userdata] getShape( Raycastresult ) args:1,
        [userdata] getCharacter( Raycastresult ) args:1,
        [userdata] getJoint( Raycastresult ) args:1,
        [userdata] getLiftData( Raycastresult ) args:1,
        [userdata] getHarvestable( Raycastresult ) args:1,
        [userdata] getAreaTrigger( Raycastresult ) args:1,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
    },
    "shape": {
        function getId( Shape ) args:1,
        function getShapeUuid( --- ) args:1,
        function getColor( --- ) args:1,
        function setColor( ---, Color ) args:2,
        function getMass( --- ) args:1,
        function getBuoyancy( --- ) args:1,
        function getMaterial( --- ) args:1,
        function getWorldPosition( --- ) args:1,
        function getLocalPosition( --- ) args:1,
        function getVelocity( --- ) args:1,
        function getXAxis( --- ) args:1,
        function getYAxis( --- ) args:1,
        function getZAxis( --- ) args:1,
        function getAt( --- ) args:1,
        function getRight( --- ) args:1,
        function getUp( --- ) args:1,
        function transformPoint( ---, Vec3 ) args:2,
        function transformLocalPoint( ---, Vec3 ) args:2,
        function transformRotation( ---, Quat ) args:2,
        function getBoundingBox( --- ) args:1,
        function getBody( --- ) args:1,
        function getInteractable( --- ) args:1,
        function destroyPart( ---, Integer ) min:1 max:2,
        function getWorldRotation( --- ) args:1,
        function createPart( Uuid, Vec3, Quat ),
        function createBlock( Uuid, Vec3, Vec3, Quat ) args:4,
        function createJoint( ---, Uuid, Vec3, Vec3 ) args:4,
        function getMaterialId( --- ) args:1,
        function getIsHarvest( Uuid ) args:1,
        function getIsStackable( Uuid ) args:1,
        function getShapeTypeColor( Uuid ) args:1,
        function destroyShape( ---, Integer ) min:1 max:2,
        function getShapeTitle( Uuid ) args:1,
        function getShapeDescription( Uuid ) args:1,
        function getShapeIcon( Uuid ) args:1,
        function shapeExists( --- ) args:1,
        function shapesInSphere( Vec3, [Number, String] ) args:2,
        function getNeighbours( --- ) args:1,
        function getPipedNeighbours( --- ) args:1,
        [userdata] getId( Shape ) args:1,
        [userdata] getShapeUuid( --- ) args:1,
        [userdata] getColor( --- ) args:1,
        [userdata] setColor( ---, Color ) args:2,
        [userdata] getMass( --- ) args:1,
        [userdata] getBuoyancy( --- ) args:1,
        [userdata] getMaterial( --- ) args:1,
        [userdata] getWorldPosition( --- ) args:1,
        [userdata] getLocalPosition( --- ) args:1,
        [userdata] getVelocity( --- ) args:1,
        [userdata] getXAxis( --- ) args:1,
        [userdata] getYAxis( --- ) args:1,
        [userdata] getZAxis( --- ) args:1,
        [userdata] getAt( --- ) args:1,
        [userdata] getRight( --- ) args:1,
        [userdata] getUp( --- ) args:1,
        [userdata] transformPoint( ---, Vec3 ) args:2,
        [userdata] transformLocalPoint( ---, Vec3 ) args:2,
        [userdata] transformRotation( ---, Quat ) args:2,
        [userdata] getBoundingBox( --- ) args:1,
        [userdata] getBody( --- ) args:1,
        [userdata] getInteractable( --- ) args:1,
        [userdata] destroyPart( ---, Integer ) min:1 max:2,
        [userdata] getWorldRotation( --- ) args:1,
        [userdata] createJoint( ---, Uuid, Vec3, Vec3 ) args:4,
        [userdata] getMaterialId( --- ) args:1,
        [userdata] getIsHarvest( Uuid ) args:1,
        [userdata] getIsStackable( Uuid ) args:1,
        [userdata] destroyShape( ---, Integer ) min:1 max:2,
        [userdata] destroyBlock( ---, Vec3, Vec3, Integer ) min:2 max:4,
        [userdata] getClosestBlockLocalPosition( ---, Vec3 ) args:2,
        [userdata] shapeExists( --- ) args:1,
        [userdata] shapesInSphere( Vec3, [Number, String] ) args:2,
        [userdata] getNeighbours( --- ) args:1,
        [userdata] getPipedNeighbours( --- ) args:1,
        [userdata] replaceShape( ---, Uuid ) args:2,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( Shape, Shape ) args:2,
    },
    "body": {
        function getId( Body ) args:1,
        function getCreationId( --- ) args:1,
        function getMass( --- ) args:1,
        function getWorldPosition( --- ) args:1,
        function getVelocity( --- ) args:1,
        function getAngularVelocity( --- ) args:1,
        function getShapes( --- ) args:1,
        function getCreationShapes( --- ) args:1,
        function getCreationBodies( --- ) args:1,
        function getCreationsFromBodies( Table ) args:1,
        function hasChanged( ---, Integer ) args:2,
        function getAllBodies( ) args:0,
        function createBody( Vec3, Quat, --- ) min:1 max:3,
        function getWorldRotation( --- ) args:1,
        function getCenterOfMassPosition( --- ) args:1,
        function isDynamic( --- ) args:1,
        function isStatic( --- ) args:1,
        function isOnLift( --- ) args:1,
        function isDestructable( --- ) args:1,
        function setDestructable( ---, --- ) args:2,
        function isBuildable( --- ) args:1,
        function setBuildable( ---, --- ) args:2,
        function isPaintable( --- ) args:1,
        function setPaintable( ---, --- ) args:2,
        function isConnectable( --- ) args:1,
        function setConnectable( ---, --- ) args:2,
        function isLiftable( --- ) args:1,
        function setLiftable( ---, --- ) args:2,
        function isUsable( --- ) args:1,
        function setUsable( ---, --- ) args:2,
        function isErasable( --- ) args:1,
        function setErasable( ---, --- ) args:2,
        function isConvertibleToDynamic( --- ) args:1,
        function setConvertibleToDynamic( ---, --- ) args:2,
        [userdata] getId( Body ) args:1,
        [userdata] getCreationId( --- ) args:1,
        [userdata] getMass( --- ) args:1,
        [userdata] getWorldPosition( --- ) args:1,
        [userdata] getVelocity( --- ) args:1,
        [userdata] getAngularVelocity( --- ) args:1,
        [userdata] getShapes( --- ) args:1,
        [userdata] getCreationShapes( --- ) args:1,
        [userdata] getCreationBodies( --- ) args:1,
        [userdata] createPart( ---, Uuid, Vec3, Vec3, Vec3, --- ) min:5 max:6,
        [userdata] createBlock( ---, Uuid, Vec3, Vec3, --- ) min:4 max:5,
        [userdata] hasChanged( ---, Integer ) args:2,
        [userdata] isDynamic( --- ) args:1,
        [userdata] isStatic( --- ) args:1,
        [userdata] isOnLift( --- ) args:1,
        [userdata] isDestructable( --- ) args:1,
        [userdata] setDestructable( ---, --- ) args:2,
        [userdata] isBuildable( --- ) args:1,
        [userdata] setBuildable( ---, --- ) args:2,
        [userdata] isPaintable( --- ) args:1,
        [userdata] setPaintable( ---, --- ) args:2,
        [userdata] isConnectable( --- ) args:1,
        [userdata] setConnectable( ---, --- ) args:2,
        [userdata] isLiftable( --- ) args:1,
        [userdata] setLiftable( ---, --- ) args:2,
        [userdata] isUsable( --- ) args:1,
        [userdata] setUsable( ---, --- ) args:2,
        [userdata] isErasable( --- ) args:1,
        [userdata] setErasable( ---, --- ) args:2,
        [userdata] isConvertibleToDynamic( --- ) args:1,
        [userdata] setConvertibleToDynamic( ---, --- ) args:2,
        [userdata] getAllSeatedCharacter( --- ) args:1,
        [userdata] getCenterOfMassPosition( --- ) args:1,
        [userdata] getWorld( --- ) args:1,
        [userdata] getLocalAabb( --- ) args:1,
        [userdata] getWorldAabb( --- ) args:1,
        [userdata] transformPoint( ---, Vec3 ) args:2,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( Body, Body ) args:2,
    },
    "interactable": {
        function getId( Interactable ) args:1,
        function getType( --- ) args:1,
        function getColorNormal( --- ) args:1,
        function getColorHighlight( --- ) args:1,
        function getMaxParentCount( --- ) args:1,
        function getMaxChildCount( --- ) args:1,
        function isActive( --- ) args:1,
        function setActive( ---, --- ) args:2,
        function getPower( --- ) args:1,
        function setPower( ---, --- ) args:2,
        function getPublicData( --- ) args:1,
        function setPublicData( ---, Table ) args:2,
        function getShape( --- ) args:1,
        function getConnectionInputType( --- ) args:1,
        function getConnectionOutputType( --- ) args:1,
        function getBody( --- ) args:1,
        function getSingleParent( --- ) args:1,
        function getParents( ---, Integer ) min:1 max:2,
        function getChildren( ---, Integer ) min:1 max:2,
        function getJoints( ),
        function getBearings( ),
        function getPistons( ),
        function getPoseWeight( ---, Integer ) args:2,
        function setPoseWeight( ---, Integer, --- ) args:3,
        function getGlowMultiplier( --- ) args:1,
        function setGlowMultiplier( ---, --- ) args:2,
        function getUvFrameIndex( --- ) args:1,
        function setUvFrameIndex( ---, Integer ) args:2,
        function hasAnim( ---, String ) args:2,
        function setAnimProgress( ---, String, --- ) args:3,
        function setAnimEnabled( ---, String, --- ) args:3,
        function getAnimDuration( ---, String ) args:2,
        function getLocalBonePosition( ---, String ) args:2,
        function getWorldBonePosition( ---, String ) args:2,
        function getContainer( ---, Integer ) min:1 max:2,
        function connect( ---, --- ) args:2,
        function disconnect( ---, --- ) args:2,
        function addContainer( ---, Integer, Integer, Integer ) min:3 max:4,
        function removeContainer( ---, Integer ) args:2,
        function setParams( ---, --- ) args:2,
        [userdata] getId( Interactable ) args:1,
        [userdata] getType( --- ) args:1,
        [userdata] getColorNormal( --- ) args:1,
        [userdata] getColorHighlight( --- ) args:1,
        [userdata] getMaxParentCount( --- ) args:1,
        [userdata] getMaxChildCount( --- ) args:1,
        [userdata] isActive( --- ) args:1,
        [userdata] setActive( ---, --- ) args:2,
        [userdata] getPower( --- ) args:1,
        [userdata] setPower( ---, --- ) args:2,
        [userdata] getPublicData( --- ) args:1,
        [userdata] setPublicData( ---, Table ) args:2,
        [userdata] hasOutputType( ---, Integer ) args:2,
        [userdata] getShape( --- ) args:1,
        [userdata] getConnectionInputType( --- ) args:1,
        [userdata] getConnectionOutputType( --- ) args:1,
        [userdata] getBody( --- ) args:1,
        [userdata] getSingleParent( --- ) args:1,
        [userdata] getParents( ---, Integer ) min:1 max:2,
        [userdata] getChildren( ---, Integer ) min:1 max:2,
        [userdata] getJoints( ),
        [userdata] getBearings( ),
        [userdata] getPistons( ),
        [userdata] getPoseWeight( ---, Integer ) args:2,
        [userdata] setPoseWeight( ---, Integer, --- ) args:3,
        [userdata] getGlowMultiplier( --- ) args:1,
        [userdata] setGlowMultiplier( ---, --- ) args:2,
        [userdata] getUvFrameIndex( --- ) args:1,
        [userdata] setUvFrameIndex( ---, Integer ) args:2,
        [userdata] hasAnim( ---, String ) args:2,
        [userdata] setAnimProgress( ---, String, --- ) args:3,
        [userdata] setAnimEnabled( ---, String, --- ) args:3,
        [userdata] getAnimDuration( ---, String ) args:2,
        [userdata] getLocalBonePosition( ---, String ) args:2,
        [userdata] getWorldBonePosition( ---, String ) args:2,
        [userdata] getContainer( ---, Integer ) min:1 max:2,
        [userdata] connect( ---, --- ) args:2,
        [userdata] disconnect( ---, --- ) args:2,
        [userdata] connectToJoint( ---, --- ) args:2,
        [userdata] addContainer( ---, Integer, Integer, Integer ) min:3 max:4,
        [userdata] removeContainer( ---, Integer ) args:2,
        [userdata] setParams( ---, --- ) args:2,
        [userdata] hasSeat( --- ) args:1,
        [userdata] setSeatCharacter( ---, --- ) args:2,
        [userdata] getSeatCharacter( --- ) args:1,
        [userdata] getSeatInteractables( --- ) args:1,
        [userdata] pressSeatInteractable( ---, Integer ) args:2,
        [userdata] releaseSeatInteractable( ---, Integer ) args:2,
        [userdata] hasSteering( --- ) args:1,
        [userdata] setSteeringFlag( ---, Integer ) args:2,
        [userdata] unsetSteeringFlag( ---, Integer ) args:2,
        [userdata] getSteeringPower( --- ) args:1,
        [userdata] getSteeringAngle( --- ) args:1,
        [userdata] getSteeringJointLeftAngleSpeed( ---, --- ) args:2,
        [userdata] getSteeringJointRightAngleSpeed( ---, --- ) args:2,
        [userdata] getSteeringJointLeftAngleLimit( ---, --- ) args:2,
        [userdata] getSteeringJointRightAngleLimit( ---, --- ) args:2,
        [userdata] getSteeringJointUnlocked( ---, --- ) args:2,
        [userdata] getSteeringJointSettings( ---, --- ) args:2,
        [userdata] setSteeringJointLeftAngleSpeed( ---, ---, --- ) args:3,
        [userdata] setSteeringJointRightAngleSpeed( ---, ---, --- ) args:3,
        [userdata] setSteeringJointLeftAngleLimit( ---, ---, --- ) args:3,
        [userdata] setSteeringJointRightAngleLimit( ---, ---, --- ) args:3,
        [userdata] setSteeringJointUnlocked( ---, ---, --- ) args:3,
        [userdata] setSteeringJointSettings( ---, ---, ---, ---, ---, ---, --- ) args:7,
        [userdata] setSubMeshVisible( ---, String, --- ) args:3,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( Interactable, Interactable ) args:2,
    },
    "joint": {
        function createPart( ---, Uuid, Vec3, Vec3, Vec3 ),
        function createBlock( ---, Uuid, Vec3, Vec3 ),
        function getId( Joint ) args:1,
        function getType( --- ) args:1,
        function getShapeA( --- ) args:1,
        function getShapeB( --- ) args:1,
        function getColor( --- ) args:1,
        function getAngle( --- ) args:1,
        function getAngularVelocity( --- ) args:1,
        function getAppliedImpulse( --- ) args:1,
        function isReversed( --- ) args:1,
        function setMotorVelocity( ---, ---, --- ) args:3,
        function setTargetAngle( ---, ---, ---, --- ) args:4,
        function getLength( --- ) args:1,
        function setTargetLength( ---, ---, ---, --- ) min:3 max:4,
        [userdata] createPart( ---, Uuid, Vec3, Vec3, Vec3 ),
        [userdata] createBlock( ---, Uuid, Vec3, Vec3 ),
        [userdata] getId( Joint ) args:1,
        [userdata] getType( --- ) args:1,
        [userdata] getShapeA( --- ) args:1,
        [userdata] getShapeB( --- ) args:1,
        [userdata] getColor( --- ) args:1,
        [userdata] getAngle( --- ) args:1,
        [userdata] getAngularVelocity( --- ) args:1,
        [userdata] getAppliedImpulse( --- ) args:1,
        [userdata] isReversed( --- ) args:1,
        [userdata] setMotorVelocity( ---, ---, --- ) args:3,
        [userdata] setTargetAngle( ---, ---, ---, --- ) args:4,
        [userdata] getLength( --- ) args:1,
        [userdata] setTargetLength( ---, ---, ---, --- ) min:3 max:4,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( Joint, Joint ) args:2,
    },
    "network": {
        [userdata] sendToServer( Network, ---, --- ) min:2 max:3,
        [userdata] sendToClient( Network, ---, ---, --- ) min:3 max:4,
        [userdata] sendToClients( Network, ---, --- ) min:2 max:3,
        [userdata] setClientData( Network, --- ) args:2,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
    },
    "projectile": {
        function getProjectileMass( --- ) args:1,
        function playerFire( ---, Vec3, Vec3, Vec3, Vec3, --- ) min:3 max:6,
        function shapeFire( ---, ---, Vec3, Vec3, --- ) min:4 max:5,
        function solveBallisticArc( Vec3, Vec3, ---, --- ) args:4,
        function projectileAttack( ---, ---, Vec3, Vec3, ---, Vec3, Vec3, --- ) min:5 max:8,
        function customProjectileAttack( ---, ---, ---, Vec3, Vec3, ---, Vec3, Vec3, --- ) min:6 max:9,
        function shapeProjectileAttack( ---, ---, Vec3, Vec3, ---, --- ) min:5 max:6,
        function shapeCustomProjectileAttack( ---, ---, ---, Vec3, Vec3, ---, --- ) min:6 max:7,
        function harvestableProjectileAttack( ---, ---, Vec3, Vec3, ---, --- ) min:5 max:6,
        function harvestableCustomProjectileAttack( ---, ---, ---, Vec3, Vec3, ---, --- ) min:6 max:7,
    },
    "melee": {
        function meleeAttack( String, Integer, Vec3, Vec3, ---, Integer, [Number, String] ) min:5 max:7,
    },
    "creation": {
        function exportToString( ---, ---, --- ) min:1 max:3,
        function importFromString( ---, String, Vec3, Quat ),
        function importFromFile( ---, String, Vec3, Quat ),
    },
    "cell": {
        function getNodesByTag( Integer, Integer, String ),
        function getNodesByTags( Integer, Integer, Table, ---, ---, ---, ---, ---, ---, --- ),
        function getInteractablesByTag( Integer, Integer, String ) args:3,
        function getInteractablesByTags( Integer, Integer, Table ) args:3,
        function getInteractablesByUuid( Integer, Integer, Uuid ) args:3,
        function getInteractablesByAnyUuid( Integer, Integer, Table ) args:3,
        function getHarvestables( Integer, Integer, Integer ) min:2 max:3,
        function getTags( Integer, Integer ) args:2,
    },
    "container": {
        function beginTransaction( ) args:0,
        function endTransaction( ) args:0,
        function abortTransaction( ) args:0,
        function getSize( --- ) args:1,
        function getMaxStackSize( --- ) args:1,
        function setItem( ---, Integer, Uuid, Integer, Integer ) min:4 max:5,
        function getItem( ---, Integer ) args:2,
        function getFirstItem( --- ) args:1,
        function hasChanged( ---, Integer ) args:2,
        function isEmpty( --- ) args:1,
        function getId( Container ) args:1,
        function quantity( --- ) args:1,
        function totalQuantity( ---, Uuid ) args:2,
        function itemUuid( --- ) args:1,
        function swap( ---, Integer, ---, Integer ) args:4,
        function spendFromSlot( ---, Integer, Uuid, Integer ) min:-24 max:4,
        function spend( ---, Uuid, Integer ) min:-24 max:3,
        function collectToSlot( ---, Integer, Uuid, Integer ) min:-24 max:4,
        function collect( ---, Uuid, Integer ) min:-24 max:3,
        function canCollect( ---, Uuid, Integer ) args:3,
        function canSpend( ---, Uuid, Integer ) args:3,
        function moveAll( ---, --- ) args:2,
        function setFilters( ---, Table ) args:2,
        [userdata] getSize( --- ) args:1,
        [userdata] getMaxStackSize( --- ) args:1,
        [userdata] setItem( ---, Integer, Uuid, Integer, Integer ) min:4 max:5,
        [userdata] getItem( ---, Integer ) args:2,
        [userdata] hasChanged( ---, Integer ) args:2,
        [userdata] isEmpty( --- ) args:1,
        [userdata] setAllowCollect( ---, --- ) args:2,
        [userdata] getAllowCollect( --- ) args:1,
        [userdata] setAllowSpend( ---, --- ) args:2,
        [userdata] getAllowSpend( --- ) args:1,
        [userdata] canCollect( ---, Uuid, Integer ) args:3,
        [userdata] canSpend( ---, Uuid, Integer ) args:3,
        [userdata] setFilters( ---, Table ) args:2,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( Container, Container ) args:2,
    },
    "ai": {
        function getClosestVisiblePlayerCharacter( --- ) args:1,
        function getClosestVisibleCharacterType( ---, Uuid ) args:2,
        function getClosestVisibleCrop( --- ) args:1,
        function isReachable( ---, Vec3 ) args:2,
        function getRandomCreationPosition( --- ) args:1,
        function directPathAvailable( ---, Vec3, --- ) min:2 max:3,
        function getBreachablePosition( ---, Vec3, ---, Integer ),
        function getAimPosition( ---, ---, ---, --- ) args:4,
    },
    "character": {
        function createCharacter( ---, ---, Vec3 ) min:0 max:3,
        [userdata] getId( Character ) args:1,
        [userdata] getWorldPosition( --- ) args:1,
        [userdata] getVelocity( --- ) args:1,
        [userdata] getDirection( --- ) args:1,
        [userdata] getMass( --- ) args:1,
        [userdata] getHeight( --- ) args:1,
        [userdata] getPlayer( --- ) args:1,
        [userdata] getUnit( --- ) args:1,
        [userdata] getWorld( --- ) args:1,
        [userdata] isPlayer( --- ) args:1,
        [userdata] getRadius( --- ) args:1,
        [userdata] getGlowMultiplier( --- ) args:1,
        [userdata] setGlowMultiplier( ---, --- ) args:2,
        [userdata] bindAnimationCallback( ---, String, ---, String ) args:4,
        [userdata] removeAnimationCallbacks( --- ) args:1,
        [userdata] addRenderable( ---, String ) args:2,
        [userdata] removeRenderable( ---, String ) args:2,
        [userdata] getAnimationInfo( ---, String ) args:2,
        [userdata] updateAnimation( ---, String, ---, ---, --- ) min:3 max:5,
        [userdata] setMovementWeights( ---, ---, --- ) args:3,
        [userdata] setAllowTumbleAnimations( ---, --- ) args:2,
        [userdata] setDowned( ---, --- ) args:2,
        [userdata] isDowned( --- ) args:1,
        [userdata] setSwimming( ---, --- ) args:2,
        [userdata] isSwimming( --- ) args:1,
        [userdata] setDiving( ---, --- ) args:2,
        [userdata] isDiving( --- ) args:1,
        [userdata] setTumbling( ---, --- ) args:2,
        [userdata] isTumbling( --- ) args:1,
        [userdata] applyTumblingImpulse( ---, Vec3 ) args:2,
        [userdata] getTumblingWorldPosition( --- ) args:1,
        [userdata] getTumblingWorldRotation( --- ) args:1,
        [userdata] getTumblingExtent( --- ) args:1,
        [userdata] getTumblingLinearVelocity( --- ) args:1,
        [userdata] getTumblingMass( --- ) args:1,
        [userdata] getCanSwim( --- ) args:1,
        [userdata] getActiveAnimations( --- ) args:1,
        [userdata] getTpBonePos( ---, String ) args:2,
        [userdata] getTpBoneRot( ---, String ) args:2,
        [userdata] setMovementEffects( ---, String ) args:2,
        [userdata] setMovementSpeedFraction( ---, --- ) args:2,
        [userdata] getMovementSpeedFraction( --- ) args:1,
        [userdata] setLockingInteractable( ---, --- ) args:2,
        [userdata] getLockingInteractable( --- ) args:1,
        [userdata] getCurrentMovementNoiseRadius( --- ) args:1,
        [userdata] isSprinting( --- ) args:1,
        [userdata] isAiming( --- ) args:1,
        [userdata] isCrouching( --- ) args:1,
        [userdata] getCurrentMovementSpeed( --- ) args:1,
        [userdata] isOnGround( --- ) args:1,
        [userdata] getCharacterType( --- ) args:1,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( Character, Character ) args:2,
    },
    "player": {
        function getAllPlayers( ) args:0,
        function placeLift( ---, Table, Vec3, Integer, Integer ) args:5,
        function removeLift( --- ) args:1,
        [userdata] getId( Player ) args:1,
        [userdata] getCharacter( --- ) args:1,
        [userdata] setCharacter( ---, --- ) args:2,
        [userdata] getName( --- ) args:1,
        [userdata] getInventory( --- ) args:1,
        [userdata] placeLift( ---, Table, Vec3, Integer, Integer ) args:5,
        [userdata] removeLift( --- ) args:1,
        [userdata] sendCharacterEvent( ---, String ) args:2,
        [userdata] isMale( --- ) args:1,
        [userdata] getCarry( --- ) args:1,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( Player, Player ) args:2,
    },
    "areaTrigger": {
        function createBox( Vec3, Vec3, Quat, Integer, --- ) min:2 max:5,
        function createBoxWater( Vec3, Vec3, Quat, Integer, --- ) min:2 max:5,
        function createAttachedBox( ---, Vec3, Vec3, Quat, Integer, --- ) min:2 max:6,
        function destroy( AreaTrigger ) args:1,
        [userdata] getId( AreaTrigger ) args:1,
        [userdata] bindOnEnter( AreaTrigger, String, --- ) min:2 max:3,
        [userdata] bindOnExit( AreaTrigger, String, --- ) min:2 max:3,
        [userdata] bindOnStay( AreaTrigger, String, --- ) min:2 max:3,
        [userdata] bindOnProjectile( AreaTrigger, String, --- ) min:2 max:3,
        [userdata] getContents( AreaTrigger ) args:1,
        [userdata] getWorldMin( AreaTrigger ) args:1,
        [userdata] getWorldMax( AreaTrigger ) args:1,
        [userdata] getWorldPosition( AreaTrigger ) args:1,
        [userdata] setWorldPosition( AreaTrigger, Vec3 ) args:2,
        [userdata] setSize( AreaTrigger, Vec3 ) args:2,
        [userdata] getSize( AreaTrigger ) args:1,
        [userdata] getHostInteractable( AreaTrigger ) args:1,
        [userdata] getUserData( AreaTrigger ) args:1,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( AreaTrigger, AreaTrigger ) args:2,
        [userdata] __gc( AreaTrigger ) args:1,
    },
    "game": {
        function getServerTick( ) args:0,
        function getCurrentTick( ) args:0,
        function setLimitedInventory( --- ) args:1,
        function enableRestrictions( --- ) args:1,
        function bindChatCommand( String, Table, String, String ) args:4,
        function setTimeOfDay( [Number, String] ) args:1,
        function getTimeOfDay( ) args:0,
    },
    "world": {
        function createWorld( String, String, ---, Integer ),
        function loadWorld( World ) args:1,
        function destroyWorld( --- ) args:1,
        function getId( World ) args:1,
        function getCurrentWorld( ),
        function loadCell( ---, Integer, Integer, ---, String, --- ) min:4 max:6,
        [userdata] destroy( --- ) args:1,
        [userdata] getId( World ) args:1,
        [userdata] loadCell( ---, Integer, Integer, ---, String, --- ) min:4 max:6,
        [userdata] setTerrainScriptData( ---, --- ) args:2,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( World, World ) args:2,
    },
    "event": {
        function sendToGame( ---, --- ) min:1 max:2,
        function sendToWorld( ---, ---, --- ) min:2 max:3,
        function sendToUnit( ---, ---, --- ) min:2 max:3,
        function sendToPlayer( ---, ---, --- ) min:2 max:3,
        function sendToCharacter( ---, ---, --- ) min:2 max:3,
        function sendToHarvestable( ---, ---, --- ) min:2 max:3,
        function sendToInteractable( ---, ---, --- ) min:2 max:3,
    },
    "item": {
        function myFunction( --- ) args:1,
        function getShapeOffset( Uuid ) args:1,
        function getQualityLevel( Uuid ) args:1,
        function getPlantable( Uuid ) args:1,
        function getEdible( Uuid ) args:1,
        function getCharacterShape( Uuid ) args:1,
        function isTool( Uuid ) args:1,
        function isBlock( Uuid ) args:1,
        function isPart( Uuid ) args:1,
        function isJoint( Uuid ) args:1,
        function getPlantableUuids( ) args:0,
        function getInteractablesUuidsOfType( --- ) args:1,
        function getShapeSize( Uuid ) args:1,
        function getShapeDefaultColor( Uuid ) args:1,
    },
    "challenge": {
        function start( --- ) args:1,
        function stop( ) args:0,
        function hasStarted( ) args:0,
        function levelCompleted( Uuid, ---, --- ) min:2 max:3,
        function getCompletionTime( Uuid ) args:1,
        function getSaveData( Uuid ) args:1,
        function resolveContentPath( String ) args:1,
        function takePicture( Integer, Integer, Integer ) min:0 max:3,
        function takePicturesForMenu( Integer ) min:0 max:1,
    },
    "portal": {
        function createPortal( Vec3 ) args:1,
        function destroy( --- ) args:1,
        function addWorldPortalHook( ---, ---, --- ) args:3,
        function popWorldPortalHook( --- ) args:1,
        [userdata] getId( Portal ) args:1,
        [userdata] hasOpeningA( --- ) args:1,
        [userdata] hasOpeningB( --- ) args:1,
        [userdata] setOpeningA( ---, Vec3, Quat ) args:3,
        [userdata] setOpeningB( ---, Vec3, Quat ) args:3,
        [userdata] getPositionA( --- ) args:1,
        [userdata] getPositionB( --- ) args:1,
        [userdata] getRotationA( --- ) args:1,
        [userdata] getRotationB( --- ) args:1,
        [userdata] getWorldA( --- ) args:1,
        [userdata] getWorldB( --- ) args:1,
        [userdata] getContentsA( --- ) args:1,
        [userdata] getContentsB( --- ) args:1,
        [userdata] transferAToB( --- ) args:1,
        [userdata] transferBToA( --- ) args:1,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( Portal, Portal ) args:2,
    },
    "quest": {
        function addQuest( Uuid ) args:1,
        function getQuest( Uuid ) args:1,
        function getQuestById( Integer ) args:1,
        function getActiveQuests( ) args:0,
        function removeQuest( --- ) args:1,
        function completeQuest( --- ) args:1,
        function getIsRepeatable( Uuid ) args:1,
        function getHasCompleted( Uuid ) args:1,
        [userdata] getUuid( --- ) args:1,
        [userdata] getObjectives( --- ) args:1,
        [userdata] getRewards( --- ) args:1,
        [userdata] getDescription( --- ) args:1,
        [userdata] remove( --- ) args:1,
        [userdata] complete( --- ) args:1,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( Quest, Quest ) args:2,
    },
    "harvestable": {
        function getId( Harvestable ) args:1,
        function getType( --- ) args:1,
        function getName( --- ) args:1,
        function getMaterial( --- ) args:1,
        function getMaterialId( --- ) args:1,
        function destroy( --- ) args:1,
        function create( Uuid, Vec3, Quat, Vec3 ) min:2 max:4,
        function getPosition( --- ) args:1,
        function getRotation( --- ) args:1,
        function getPoseWeight( ---, Integer ) args:2,
        function setPoseWeight( ---, Integer, [Number, String] ) args:3,
        function getColor( --- ) args:1,
        function setColor( ---, Color ) args:2,
        function getUvFrameIndex( --- ) args:1,
        function setUvFrameIndex( ---, Integer ) args:2,
        function setParams( ---, --- ) args:2,
        [userdata] getId( Harvestable ) args:1,
        [userdata] getType( --- ) args:1,
        [userdata] getName( --- ) args:1,
        [userdata] getMaterial( --- ) args:1,
        [userdata] getMaterialId( --- ) args:1,
        [userdata] destroy( --- ) args:1,
        [userdata] getPosition( --- ) args:1,
        [userdata] getRotation( --- ) args:1,
        [userdata] getPoseWeight( ---, Integer ) args:2,
        [userdata] setPoseWeight( ---, Integer, [Number, String] ) args:3,
        [userdata] getColor( --- ) args:1,
        [userdata] setColor( ---, Color ) args:2,
        [userdata] getUvFrameIndex( --- ) args:1,
        [userdata] setUvFrameIndex( ---, Integer ) args:2,
        [userdata] setParams( ---, --- ) args:2,
        [userdata] getUuid( --- ) args:1,
        [userdata] getAabb( --- ) args:1,
        [userdata] setParams( ---, --- ) args:2,
        [userdata] getData( --- ) args:1,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( Harvestable, Harvestable ) args:2,
    },
    "lift": {
        [userdata] getId( Lift ) args:1,
        [userdata] getWorldPosition( --- ) args:1,
        [userdata] getLevel( --- ) args:1,
        [userdata] hasBodies( --- ) args:1,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( Lift, Lift ) args:2,
    },
    "construction": {
        function buildBlock( Uuid, Vec3, --- ) min:2 max:3,
        function validateLocalPosition( Uuid, Vec3, Vec3 ),
    },
    "storage": {
        function save( ---, --- ) args:2,
        function load( --- ) args:1,
        [userdata] save( Storage, --- ) args:2,
        [userdata] load( Storage ) args:1,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
    },
    "unit": {
        function createUnit( Uuid, Vec3, [Number, String], --- ) min:2 max:4,
        function HACK_getAllUnits_HACK( ) args:0,
        [userdata] destroy( --- ) args:1,
        [userdata] getId( Unit ) args:1,
        [userdata] setWhiskerData( ---, Integer, [Number, String], [Number, String], [Number, String] ) args:5,
        [userdata] setHearingData( ---, [Number, String] ) args:2,
        [userdata] createState( ---, String ) args:2,
        [userdata] setMovementDirection( ---, Vec3 ) args:2,
        [userdata] setFacingDirection( ---, Vec3 ) args:2,
        [userdata] setMovementType( ---, String ) args:2,
        [userdata] setWantsJump( ---, [Number, Boolean] ) args:2,
        [userdata] getCurrentMovementDirection( --- ) args:1,
        [userdata] getCurrentFacingDirection( --- ) args:1,
        [userdata] sendCharacterEvent( ---, String ) args:2,
        [userdata] getCharacter( --- ) args:1,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( Unit, Unit ) args:2,
    },
    "aiState": {
        [userdata] start( --- ) args:1,
        [userdata] stop( --- ) args:1,
        [userdata] onFixedUpdate( ---, --- ) args:2,
        [userdata] onUnitUpdate( ---, --- ) args:2,
        [userdata] isDone( --- ) args:1,
        [userdata] getMovementDirection( --- ) args:1,
        [userdata] getFacingDirection( --- ) args:1,
        [userdata] getMovementType( --- ) args:1,
        [userdata] getWantsJump( --- ) args:1,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( AiState, AiState ) args:2,
        [userdata] __gc( ),
    },
    "pathfinder": {
        function getPath( ---, Vec3, [Number, Boolean], --- ) min:2 max:4,
        function getSortedNodes( Vec3, ---, --- ) args:3,
    },
    "pathNode": {
        function createPathNode( Vec3, --- ) args:2,
        [userdata] destroy( ),
        [userdata] connect( ---, ---, ---, ---, --- ) min:2 max:5,
        [userdata] getPosition( --- ) args:1,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( PathNode, PathNode ) args:2,
    },
    "tool": {
        function checkLiftCollision( Table, Vec3, Integer, ---, ---, ---, ---, ---, ---, --- ),
        function preloadRenderables( Table ) args:1,
        function forceTool( --- ) args:1,
        [userdata] getId( Tool ) args:1,
        [userdata] getOwner( --- ) args:1,
        [userdata] updateAnimation( ---, String, ---, --- ) min:3 max:4,
        [userdata] setMovementAnimation( ---, String, String ) args:3,
        [userdata] updateMovementAnimation( ---, ---, --- ) min:2 max:3,
        [userdata] getAnimationInfo( ---, String ) args:2,
        [userdata] updateJoint( ---, String, Vec3, --- ) min:3 max:4,
        [userdata] updateCamera( ---, ---, ---, Vec3, --- ) args:5,
        [userdata] setTpRenderables( ---, Table ) args:2,
        [userdata] setTpColor( ---, Color ) args:2,
        [userdata] updateFpAnimation( ---, String, ---, ---, --- ) min:3 max:5,
        [userdata] getFpAnimationInfo( ---, String ) args:2,
        [userdata] setFpRenderables( ---, Table ) args:2,
        [userdata] setFpColor( ---, Color ) args:2,
        [userdata] updateFpCamera( ---, ---, Vec3, ---, --- ) args:5,
        [userdata] isCrouching( --- ) args:1,
        [userdata] isSprinting( --- ) args:1,
        [userdata] isOnGround( --- ) args:1,
        [userdata] setBlockSprint( ---, --- ) args:2,
        [userdata] setMovementSlowDown( ---, --- ) args:2,
        [userdata] isLocal( --- ) args:1,
        [userdata] isInFirstPersonView( --- ) args:1,
        [userdata] setDispersionFraction( ---, --- ) args:2,
        [userdata] setCrossHairAlpha( ---, --- ) args:2,
        [userdata] setInteractionTextSuppressed( ---, --- ) args:2,
        [userdata] getPosition( --- ) args:1,
        [userdata] getDirection( --- ) args:1,
        [userdata] getMovementVelocity( --- ) args:1,
        [userdata] getRelativeMoveDirection( --- ) args:1,
        [userdata] getMovementSpeedFraction( --- ) args:1,
        [userdata] getTpBonePos( ---, String ) args:2,
        [userdata] getTpBoneDir( ---, String ) args:2,
        [userdata] getFpBonePos( ---, String ) args:2,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
    },
    "audio": {
        function play( String, Vec3 ) min:1 max:2,
    },
    "particle": {
        function createParticle( String, Vec3, Quat, Color ) min:2 max:4,
    },
    "effect": {
        function playEffect( String, Vec3, Vec3, Quat, Vec3, Table ) min:2 max:6,
        function playHostedEffect( String, ---, ---, Table ) min:2 max:4,
        function createEffect( ) args:-1,
        function createEffect2D( String ) args:1,
        [userdata] getId( Effect ) args:1,
        [userdata] start( --- ) args:1,
        [userdata] stop( --- ) args:1,
        [userdata] destroy( --- ) args:1,
        [userdata] isPlaying( --- ) args:1,
        [userdata] setPosition( ---, Vec3 ) args:2,
        [userdata] setScale( ---, Vec3 ) args:2,
        [userdata] setVelocity( ---, Vec3 ) args:2,
        [userdata] setRotation( ---, Quat ) args:2,
        [userdata] setOffsetPosition( ---, Vec3 ) args:2,
        [userdata] setOffsetRotation( ---, Quat ) args:2,
        [userdata] setParameter( ---, String, [Boolean, Color, Uuid] ) args:3,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __eq( Effect, Effect ) args:2,
        [userdata] __gc( Effect ) args:1,
    },
    "localPlayer": {
        function getPlayer( ) args:0,
        function getId( ) args:0,
        function getPosition( ) args:0,
        function getDirection( ) args:0,
        function getRight( ) args:0,
        function getUp( ) args:0,
        function getRaycastStart( ) args:0,
        function getRaycast( --- ) min:0 max:1,
        function isInFirstPersonView( ) args:0,
        function getFpBonePos( String ) args:1,
        function getActiveItem( ) args:0,
        function getSelectedHotbarSlot( ) args:0,
        function getCarry( ) args:0,
        function getInventory( ) args:0,
        function setDirection( Vec3 ) args:1,
        function getFpAnimationInfo( String ) args:1,
        function updateFpAnimation( String, ---, ---, --- ) min:2 max:4,
        function addRenderable( String ) args:1,
        function removeRenderable( String ) args:1,
        function setBlockSprinting( --- ) args:1,
        function setLockedControls( --- ) args:1,
    },
    "camera": {
        function setPosition( Vec3 ) args:1,
        function getPosition( ) args:0,
        function getDefaultPosition( ) args:0,
        function setDirection( Vec3 ) args:1,
        function getDirection( ) args:0,
        function getUp( ) args:0,
        function getRight( ) args:0,
        function getFov( ) args:0,
        function setShake( --- ) args:1,
        function setCameraState( Integer ) args:1,
        function getCameraState( ) args:0,
        function setCameraPullback( Integer, Integer ) args:2,
        function cameraSphereCast( ---, Vec3, Vec3 ) args:3,
    },
    "gui": {
        "widget": {
            function getId( ),
            function getName( ),
            function getTypeName( ),
            function getPosition( ),
            function setPosition( ),
            function getVisible( ),
            function setVisible( ),
            function getSize( ),
            function setSize( ),
            function getText( ),
            function setText( ),
            function destroy( ),
            function find( ),
            function bindOnClick( ),
            [userdata] find( ),
            [userdata] getName( ),
            [userdata] getTypeName( ),
            [userdata] getPosition( ),
            [userdata] setPosition( ),
            [userdata] getVisible( ),
            [userdata] setVisible( ),
            [userdata] getSize( ),
            [userdata] setSize( ),
            [userdata] getText( ),
            [userdata] setText( ),
            [userdata] find( ),
            [userdata] bindOnClick( ),
            [userdata] __newindex( ---, String, --- ) args:3,
            [userdata] __index( ---, String ) args:2,
            [userdata] __eq( Widget, Widget ) args:2,
        },
        "interface": {
            [userdata] destroy( --- ) args:1,
            [userdata] open( --- ) args:1,
            [userdata] close( --- ) args:1,
            [userdata] isActive( --- ) args:1,
            [userdata] setText( ---, ---, --- ) args:3,
            [userdata] setTextFromItemName( ---, ---, Uuid ) args:3,
            [userdata] setVisible( ---, ---, --- ) args:3,
            [userdata] setImage( ---, ---, --- ) args:3,
            [userdata] setIconImage( ---, ---, Uuid ) args:3,
            [userdata] setButtonState( ---, ---, --- ) args:3,
            [userdata] setSliderRange( ---, ---, --- ) args:3,
            [userdata] setSliderPosition( ---, ---, --- ) args:3,
            [userdata] setSliderRangeLimit( ---, ---, --- ) args:3,
            [userdata] setSliderData( ---, ---, ---, --- ) args:4,
            [userdata] clearList( ---, --- ) args:2,
            [userdata] addListItem( ---, ---, ---, --- ) args:4,
            [userdata] setSelectedListItem( ---, ---, --- ) args:3,
            [userdata] clearGrid( ---, --- ) args:2,
            [userdata] addGridItemsFromFile( ---, ---, ---, --- ) min:3 max:4,
            [userdata] addGridItem( ---, ---, --- ) args:3,
            [userdata] setGridItem( ---, ---, ---, --- ) args:4,
            [userdata] setGridSize( ---, ---, --- ) args:3,
            [userdata] setContainer( ---, ---, --- ) args:3,
            [userdata] setContainers( ---, ---, Table ) args:3,
            [userdata] setData( ---, ---, --- ) args:3,
            [userdata] setHost( ---, ---, --- ) min:2 max:3,
            [userdata] setWorldPosition( ---, Vec3 ) args:2,
            [userdata] setMaxRenderDistance( ---, --- ) args:2,
            [userdata] setFadeRange( ---, --- ) args:2,
            [userdata] setRequireLineOfSight( ---, --- ) args:2,
            [userdata] setOnCloseCallback( ---, --- ) args:2,
            [userdata] setButtonCallback( ---, ---, --- ) args:3,
            [userdata] setSliderCallback( ---, ---, --- ) args:3,
            [userdata] setGridButtonCallback( ---, ---, --- ) args:3,
            [userdata] setGridItemChangedCallback( ---, ---, --- ) args:3,
            [userdata] setListSelectionCallback( ---, ---, --- ) args:3,
            [userdata] __newindex( ---, String, --- ) args:3,
            [userdata] __index( ---, String ) args:2,
            [userdata] __eq( GuiInterface, GuiInterface ) args:2,
            [userdata] __gc( GuiInterface ) args:1,
        },
        function createWidget( ),
        function getScreenSize( ) args:0,
        function createContainerGui( --- ) min:0 max:1,
        function createWorkbenchGui( --- ) min:0 max:1,
        function createCookBotGui( --- ) min:0 max:1,
        function createCraftBotGui( --- ) min:0 max:1,
        function createMechanicStationGui( --- ) min:0 max:1,
        function createSurvivalHudGui( --- ) min:0 max:1,
        function createHideoutGui( --- ) min:0 max:1,
        function createDressBotGui( --- ) min:0 max:1,
        function createEngineGui( --- ) min:0 max:1,
        function createSeatGui( --- ) min:0 max:1,
        function createNameTagGui( --- ) min:0 max:1,
        function createBagIconGui( --- ) min:0 max:1,
        function createAmmunitionContainerGui( --- ) min:0 max:1,
        function createBatteryContainerGui( --- ) min:0 max:1,
        function createChemicalContainerGui( --- ) min:0 max:1,
        function createFertilizerContainerGui( --- ) min:0 max:1,
        function createGasContainerGui( --- ) min:0 max:1,
        function createSeedContainerGui( --- ) min:0 max:1,
        function createWaterContainerGui( --- ) min:0 max:1,
        function createSeatUpgradeGui( --- ) min:0 max:1,
        function createSteeringBearingGui( --- ) min:0 max:1,
        function createChallengeHUDGui( --- ) min:0 max:1,
        function createChallengeMessageGui( --- ) min:0 max:1,
        function displayAlertText( String, --- ) min:1 max:2,
        function hideGui( --- ) args:1,
        function getKeyBinding( String ) args:1,
        function setInteractionText( ---, ---, ---, ---, --- ) min:1 max:5,
        function setCenterIcon( String ) args:1,
        function setProgressFraction( --- ) args:1,
        function createCharacterCustomizationGui( --- ) min:0 max:1,
        function setCharacterDebugText( ---, String, --- ) min:2 max:3,
        function exitToMenu( ) args:0,
        function chatMessage( String ) args:1,
    },
    "visualization": {
        function setCreationBodies( Table ) args:1,
        function setCreationVisible( --- ) args:1,
        function setCreationValid( --- ) args:1,
        function setCreationFreePlacement( --- ) args:1,
        function setCreationFreePlacementPosition( Vec3 ) args:1,
        function setCreationFreePlacementRotation( --- ) args:1,
        function setLiftPosition( Vec3 ) args:1,
        function setLiftLevel( --- ) args:1,
        function setLiftVisible( --- ) args:1,
        function setLiftValid( --- ) args:1,
        function setBlockVisualization( Vec3, ---, --- ) min:1 max:3,
    },
    "render": {
        function setOutdoorLighting( [Number, String] ) args:1,
        function getOutdoorLighting( ),
        function getScreenCoordinatesFromWorldPosition( Vec3, Integer, Integer ) args:3,
    },
    "terrainTile": {
        function getHeightAt( Integer, Integer, Integer, Integer, Integer, Integer ) args:6,
        function getColorAt( Integer, Integer, Integer, Integer, Integer, Integer ) args:6,
        function getMaterialAt( Integer, Integer, Integer, Integer, Integer, Integer ) args:6,
        function getClutterIdxAt( Integer, Integer, Integer, Integer, Integer ) args:5,
        function getAssetsForCell( Integer, Integer, Integer, Integer ) args:4,
        function getHarvestablesForCell( Integer, Integer, Integer, Integer ) args:4,
        function getCreationsForCell( Integer, Integer, Integer ) args:3,
        function getNodesForCell( Integer, Integer, Integer, ---, ---, ---, ---, ---, ---, --- ),
        function getPrefabsForCell( Integer, Integer, Integer, ---, ---, ---, ---, ---, ---, --- ),
        function getDecalsForCell( Integer, Integer, Integer, ---, ---, ---, ---, ---, ---, --- ),
        function getSize( String ) args:1,
        function getTileUuid( String ) args:1,
        function getCreatorId( String ) args:1,
        function getContentFromPrefab( ),
    },
    "physics": {
        function raycast( Vec3, Vec3 ),
        function distanceRaycast( Vec3, Vec3 ) args:2,
        function applyImpulse( Userdata, Vec3, ---, Vec3 ) min:2 max:4,
        function applyTorque( Userdata, Vec3, --- ) min:2 max:3,
        function explode( Vec3, ---, ---, ---, ---, String, --- ) min:5 max:7,
        function setGravity( --- ) args:1,
        function getGravity( ),
        function getGroundMaterial( Vec3 ) args:1,
        function sphereContactCount( Vec3 ),
        function getSphereContacts( Vec3, --- ) args:2,
    },
    "terrainData": {
        function save( --- ) args:1,
        function load( ) args:0,
        function exists( ) args:0,
        function legacy_saveTerrainData( ---, --- ) args:2,
        function legacy_loadTerrainData( --- ) args:1,
        function legacy_setData( String ) args:1,
        function legacy_getData( ) args:0,
    },
    "json": {
        function open( --- ) args:1,
        function save( ---, --- ) args:2,
        function parseJsonString( --- ) args:1,
        function writeJsonString( --- ) args:1,
    },
    "noise": {
        function simplexNoise1d( --- ) args:1,
        function simplexNoise2d( ---, --- ) args:2,
        function intNoise2d( Integer, Integer, Integer ) args:3,
        function floatNoise2d( ---, ---, Integer ) args:3,
        function perlinNoise2d( ---, ---, Integer ) args:3,
        function octaveNoise2d( ---, ---, Integer, Integer ) args:4,
        function randomRange( ---, --- ) args:2,
        function randomNormalDistribution( ---, --- ) args:2,
        function gunSpread( Vec3, --- ) args:2,
    },
    "util": {
        function clamp( ---, ---, --- ) args:3,
        function lerp( ---, ---, --- ) args:3,
        function bezier2( ---, ---, ---, --- ) args:4,
        function bezier3( ---, ---, ---, ---, --- ) args:5,
        function positiveModulo( Integer, Integer ) args:2,
        function smoothstep( ---, ---, --- ) args:3,
        function smootherstep( ---, ---, --- ) args:3,
    },
    "log": {
        function info( --- ) args:1,
        function warning( --- ) args:1,
        function error( --- ) args:1,
    },
    "debugDraw": {
        function addArrow( String, Vec3, Vec3, Color ) min:2 max:4,
        function removeArrow( String ) args:1,
        function addSphere( String, Vec3, [Number, String], Color ) min:2 max:4,
        function removeSphere( String ) args:1,
        function clear( String ) min:0 max:1,
    },
    "vec3": {
        function new( ---, ---, --- ) args:3,
        function zero( ) args:0,
        function one( ) args:0,
        function getX( Vec3 ) args:1,
        function setX( Vec3, --- ) args:2,
        function getY( Vec3 ) args:1,
        function setY( Vec3, --- ) args:2,
        function getZ( Vec3 ) args:1,
        function setZ( Vec3, --- ) args:2,
        function normalize( Vec3 ) args:1,
        function dot( Vec3, Vec3 ) args:2,
        function cross( Vec3, Vec3 ) args:2,
        function length( Vec3 ) args:1,
        function length2( Vec3 ) args:1,
        function lerp( Vec3, Vec3, --- ) args:3,
        function bezier2( Vec3, Vec3, Vec3, --- ) args:4,
        function bezier3( Vec3, Vec3, Vec3, Vec3, --- ) args:5,
        function rotateX( Vec3, --- ) args:2,
        function rotateY( Vec3, --- ) args:2,
        function rotateZ( Vec3, --- ) args:2,
        function rotate( Vec3, ---, Vec3 ) args:3,
        function getRotation( Vec3, Vec3 ) args:2,
        function closestAxis( Vec3 ) args:1,
        [userdata] normalize( Vec3 ) args:1,
        [userdata] dot( Vec3, Vec3 ) args:2,
        [userdata] cross( Vec3, Vec3 ) args:2,
        [userdata] length( Vec3 ) args:1,
        [userdata] length2( Vec3 ) args:1,
        [userdata] rotateX( Vec3, --- ) args:2,
        [userdata] rotateY( Vec3, --- ) args:2,
        [userdata] rotateZ( Vec3, --- ) args:2,
        [userdata] rotate( Vec3, ---, Vec3 ) args:3,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __unm( Vec3, Vec3 ) args:2,
        [userdata] __add( Vec3, Vec3 ) args:2,
        [userdata] __sub( Vec3, Vec3 ) args:2,
        [userdata] __div( Vec3, Vec3 ) args:2,
        [userdata] __mul( Vec3, Vec3 ) args:2,
        [userdata] __lt( Vec3, Vec3 ) args:2,
        [userdata] __eq( Vec3, Vec3 ) args:2,
        [userdata] __tostring( Vec3 ) args:1,
    },
    "quat": {
        function new( ---, ---, ---, --- ) args:4,
        function identity( ),
        function angleAxis( ---, Vec3 ) args:2,
        function getX( Quat ) args:1,
        function setX( Quat, --- ) args:2,
        function getY( Quat ) args:1,
        function setY( Quat, --- ) args:2,
        function getZ( Quat ) args:1,
        function setZ( Quat, --- ) args:2,
        function getW( Quat ) args:1,
        function setW( Quat, --- ) args:2,
        function round90( Quat ) args:1,
        function lookRotation( Vec3, Vec3 ) args:2,
        function slerp( Quat, Quat, --- ) args:3,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __mul( Quat, [Quat, Vec3] ) args:2,
        [userdata] __eq( Quat, Quat ) args:2,
    },
    "uuid": {
        function new( String ) min:0 max:1,
        function getNil( ) args:0,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __tostring( Uuid ) args:1,
        [userdata] __eq( Uuid, Uuid ) args:2,
    },
    "color": {
        function new( [String, Integer] ),
        function getR( Color ) args:1,
        function getG( Color ) args:1,
        function getB( Color ) args:1,
        function getA( Color ) args:1,
        function setR( Color, --- ) args:2,
        function setG( Color, --- ) args:2,
        function setB( Color, --- ) args:2,
        function setA( Color, --- ) args:2,
        [userdata] __newindex( ---, String, --- ) args:3,
        [userdata] __index( ---, String ) args:2,
        [userdata] __add( Color, Color ) args:2,
        [userdata] __sub( Color, Color ) args:2,
        [userdata] __div( Color, Color ) args:2,
        [userdata] __mul( Color, Color ) args:2,
        [userdata] __eq( Color, Color ) args:2,
        [userdata] __tostring( Color ) args:1,
    }
}